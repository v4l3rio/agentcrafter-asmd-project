package agentcrafter.llmqlearning.scenarios

import agentcrafter.MARL.DSL.*
import agentcrafter.llmqlearning.LLMQLearning

/**
 * Example demonstrating the wallsFromLLM feature with cooperative switch mechanism.
 * This creates a simulation where the map layout is generated by an LLM and
 * one agent must activate a switch to open a wall for another agent.
 */
object WallsFromLLMExample extends App with LLMQLearning:
  import AgentProperty.*
  import LearnerProperty.*
  import SimulationProperty.*
  import TriggerProperty.*
  import WallLLMProperty.*
  
  simulation:
    grid:
      12 x 15
    
    // Generate walls using LLM with cooperative elements
    wallsFromLLM:
      Model >> "gpt-4o"
      Prompt >> """
        Create a challenging maze-like environment with the following characteristics:
        - A complex labyrinth with multiple paths
        - Several dead ends to make navigation challenging
        - At least 2-3 different routes between start and goal areas
        - Interesting chokepoints and open areas
        - The maze should encourage exploration and strategic thinking
        - Include some rooms connected by narrow corridors
        - Add a critical wall at position (6, 7) that blocks a key passage
        - Include a switch location at (3, 3) that should be accessible from the start
        """
    
    // Agent 1: SwitchOperator - must reach the switch to open the wall
    agent:
      Name >> "SwitchOperator"
      Start >> (1, 1)
      withLearner:
        Alpha >> 0.12
        Gamma >> 0.95
        Eps0 >> 0.8  // High exploration to find the switch
        EpsMin >> 0.05
        Warm >> 2_000
        Optimistic >> 0.4
      Goal >> (3, 3)  // Switch location
      onGoal:
        Give >> 75.0  // Reward for activating the switch
        OpenWall >> (6, 7)  // Open the critical wall
        EndEpisode >> false  // Continue until Runner reaches goal
    
    // Agent 2: Runner - needs to pass through the opened wall to reach the goal
    agent:
      Name >> "Runner"
      Start >> (10, 1)
      withLearner:
        Alpha >> 0.1
        Gamma >> 0.95
        Eps0 >> 0.6  // Lower exploration, focus on reaching goal
        EpsMin >> 0.05
        Warm >> 2_000
        Optimistic >> 0.3
      Goal >> (10, 13)  // Final destination (only reachable after wall opens)
      onGoal:
        Give >> 150.0  // Higher reward for completing the mission
        EndEpisode >> true  // End episode when Runner reaches goal
    
    Episodes >> 5_000
    Steps >> 800  // More steps needed for complex LLM-generated maze
    ShowAfter >> 4_500
    Delay >> 80
    WithGUI >> true